import type { NextPage } from "next";
import Head from "next/head";
import { UnorderedList, useMediaQuery } from "@chakra-ui/react";
import useSWR from "swr";
import { PokemonCard } from "components/PokemonCard";
import { request } from "graphql-request";
import { PokeApiList } from "types/PokeApiListResponse";
import { BasePokemonEntity } from "types/BasePokemonEntity";

const fetcher = (query: string, variables: any) =>
  request("/api/graphql", query, variables);

const POKEMON_QUERY = `
  query Pokemon($offset: Int, $limit: Int) {
    pokemon(offset: $offset, limit: $limit) {
      count
      next
      results {
        url
        name
      }
    }
  }
`;

type FetchResponse = {
  pokemon: PokeApiList;
};

const variables = { offset: 0, limit: 3 };

const Home: NextPage = () => {
  const { data, error } = useSWR<FetchResponse>(
    [POKEMON_QUERY, variables],
    fetcher
  );

  const [isSmallerThan800] = useMediaQuery("(max-width: 800px)");

  return (
    <>
      <Head>
        <title>Pokedex | Main</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <UnorderedList
        as="ul"
        display="flex"
        justifyContent="center"
        width={isSmallerThan800 ? "100%" : "80%"}
        bg="gray.50"
        height="100%"
        flexWrap="wrap"
        gap="10"
        p="10"
        m={0}
        data-testid="pokemon-list"
      >
        {data?.pokemon.results.map((item: BasePokemonEntity) => (
          <PokemonCard key={item.name} pokemon={item} />
        ))}
        {error && <span>{JSON.stringify(error)}</span>}
      </UnorderedList>
    </>
  );
};

export default Home;
